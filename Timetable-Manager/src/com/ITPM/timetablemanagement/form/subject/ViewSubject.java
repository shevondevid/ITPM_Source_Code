/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ITPM.timetablemanagement.form.subject;

import com.itpm.timetablemanagement.form.lecturer.EditModel;
import com.itpm.timetablemanagement.form.lecturer.ViewLecturer;
import com.ITPM.timetablemanagement.models.Lecturer;
import com.ITPM.timetablemanagement.models.Subject;
import com.ITPM.timetablemanagement.util.Constant;
import com.ITPM.timetablemanagement.util.CreateQuery;
import com.ITPM.timetablemanagement.util.DBconnection;
import java.awt.Dimension;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author Tiran Harsha
 */
public class ViewSubject extends javax.swing.JPanel {

    ArrayList<Subject> subjects = new ArrayList<>();
    TableModel model;
    EditModelSubject editModel = new EditModelSubject();
    int row ;
    int col ;
    /**
     * Creates new form ViewStudent
     */
    public ViewSubject() {
        initComponents();
        execute();
    }

    private void execute(){
        
        try {
            Connection connection =  DBconnection.getConnection();
            PreparedStatement statement = connection.prepareStatement(CreateQuery.getQuery(Constant.GET_SUBJECT));
            ResultSet resultSet = statement.executeQuery();
            
            while(resultSet.next()){
                DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
                Subject sub = new Subject();
                
                sub.setId(resultSet.getInt("id"));
                sub.setSub_name(resultSet.getString("subject_name"));
                sub.setSub_code(resultSet.getString("subject_code"));
                sub.setSub_eva_hr(resultSet.getString("eva_hr"));
                sub.setSub_lab_hr(resultSet.getString("lab_hr"));
                sub.setSub_lec_hr(resultSet.getString("lec_hr"));
                sub.setSub_tute_hr(resultSet.getString("tute_hr"));
                sub.setSub_year(resultSet.getString("offered_year"));
                sub.setSub_sem(resultSet.getString("offered_semester"));
                
                subjects.add(sub);
                
                mod.setRowCount(0);
                
                createTable();
            }
        } catch (SQLException | ClassNotFoundException | IOException | 
                ParserConfigurationException | SAXException ex) {
            Logger.getLogger(ViewLecturer.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error on data load", "Data error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void createTable(){
        DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
        
        Object [] data = new Object[11];
        
        for(int i = 0;i < subjects.size(); i++){
            data[0] = subjects.get(i).getId();
            data[1] = subjects.get(i).getSub_year();
            data[2] = subjects.get(i).getSub_sem();
            data[3] = subjects.get(i).getSub_name();
            data[4] = subjects.get(i).getSub_code();
            data[5] = subjects.get(i).getSub_lec_hr();
            data[6] = subjects.get(i).getSub_tute_hr();
            data[7] = subjects.get(i).getSub_lab_hr();
            data[8] = subjects.get(i).getSub_eva_hr();
            data[9] = "Edit";
            data[10] = "Delete";
            
            mod.addRow(data);
           
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btn_reset = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(186, 148, 243));
        setToolTipText("");
        setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(92, 141, 224));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("View Subject");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addGap(337, 337, 337))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(java.awt.Color.gray);
        jPanel2.setToolTipText("");

        jPanel3.setBackground(java.awt.Color.gray);

        btn_reset.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_reset.setText("Refresh");
        btn_reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_resetMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_reset)
                .addGap(61, 61, 61))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_reset)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Offered Year", "Offered Sem", "Subject Name", "Subject Code", "Lecture Hours", "Lab Hours", "Tutorial Hours", "Evaluation Hours", "Action", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCellSelectionEnabled(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
            jTable1.getColumnModel().getColumn(9).setResizable(false);
            jTable1.getColumnModel().getColumn(10).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1021, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 72, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel2);

        add(jScrollPane2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        int col = jTable1.getSelectedColumn();
        model = jTable1.getModel();
        
        if(col == 10){
            int x = JOptionPane.showConfirmDialog(ViewSubject.this, "Are you sure to Delete", "Delete", JOptionPane.YES_NO_OPTION);
            if(x==0){
                deleteData(row);
            }
            
        }
        else if(col == 9){
            editModel.setVisible(true);
            editModel.setPreferredSize(new Dimension(200, 400));
            editModel.setLocationRelativeTo(this);
            editModel.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            
            editModel.cmb_sub_year.setSelectedItem(model.getValueAt(row, 1));
            editModel.cmb_sub_sem.setSelectedItem(model.getValueAt(row, 2));
            editModel.txt_sub_name.setText(model.getValueAt(row, 3).toString());
            editModel.txt_sub_code.setText(model.getValueAt(row, 4).toString());
            editModel.txt_sub_lec_hr.setText(model.getValueAt(row, 5).toString());
            editModel.txt_sub_tute_hr.setText(model.getValueAt(row, 6).toString());
            editModel.txt_sub_lab_hr.setText(model.getValueAt(row, 7).toString());
            editModel.txt_sub_eva_hr.setText(model.getValueAt(row, 8).toString());
            editModel.txt_id.setText(model.getValueAt(row, 0).toString());
            
            
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btn_resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_resetMouseClicked
        refreshTable();
    }//GEN-LAST:event_btn_resetMouseClicked

    private void deleteData(int row){
        boolean error = false;
        DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
        
         try {
             int id = (int) model.getValueAt(row, 0);
            
             
            Connection connection =  DBconnection.getConnection();
            PreparedStatement statement = connection.prepareStatement(CreateQuery.getQuery(Constant.DELETE_SUBJECT));
            
            statement.setInt(1, id);
            statement.execute();
            
        } catch (SQLException | ClassNotFoundException | IOException | 
                ParserConfigurationException | SAXException ex) {
            Logger.getLogger(ViewLecturer.class.getName()).log(Level.SEVERE, null, ex);
            error = true;
            
             JOptionPane.showMessageDialog(ViewSubject.this, "Delete Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
         
         if(!error){
             JOptionPane.showMessageDialog(ViewSubject.this, "Delete Succes", "Succes", JOptionPane.DEFAULT_OPTION);
             mod.removeRow(row);
             
             refreshTable();
         }
    }

    protected void refreshTable(){
        DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
        mod.setRowCount(0);
        try {
            Connection connection =  DBconnection.getConnection();
            PreparedStatement statement = connection.prepareStatement(CreateQuery.getQuery(Constant.GET_SUBJECT));
            ResultSet resultSet = statement.executeQuery();
            
            
            Object [] data = new Object[11];
                
            while(resultSet.next()){
                Lecturer l = new Lecturer();
        
                data[0] = resultSet.getInt("id");
                data[1] = resultSet.getString("offered_year");
                data[2] = resultSet.getString("offered_semester");
                data[3] = resultSet.getString("subject_name");
                data[4] = resultSet.getString("subject_code");
                data[5] = resultSet.getString("lec_hr");
                data[6] = resultSet.getString("tute_hr");
                data[7] = resultSet.getString("lab_hr");
                data[8] = resultSet.getString("eva_hr");
                data[9] = "Edit";
                data[10] = "Delete"; 
               
                mod.addRow(data);
            }
        } catch (SQLException | ClassNotFoundException | IOException | 
                ParserConfigurationException | SAXException ex) {
            Logger.getLogger(ViewLecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_reset;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
