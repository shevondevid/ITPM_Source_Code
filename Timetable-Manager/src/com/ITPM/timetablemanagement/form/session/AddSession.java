/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.itpm.timetablemanagement.form.session;

import com.ITPM.timetablemanagement.models.GeneratedId;
import com.ITPM.timetablemanagement.models.GeneratedSubId;
import com.ITPM.timetablemanagement.models.Lecturer;
import com.ITPM.timetablemanagement.models.Subject;
import com.ITPM.timetablemanagement.models.tag;
import com.ITPM.timetablemanagement.util.Constant;
import com.ITPM.timetablemanagement.util.CreateQuery;
import com.ITPM.timetablemanagement.util.DBconnection;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Dictionary;
import java.util.Hashtable;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author Tiran Harsha
 */
public class AddSession extends javax.swing.JPanel {

    PreparedStatement statement, statement1, statement2;
    Connection connection;
    ResultSet resultSet;
    
    Dictionary<Integer, Lecturer> lectruerList;
    Dictionary<Integer, Subject> subjectList;
    Dictionary<Integer, GeneratedId> groupIDList;
    Dictionary<Integer, GeneratedSubId> subgroupIDList;
    Dictionary<Integer, JComboBox<String>> lecList;
    ArrayList<tag> tagList;
    
    String [] lecture;
    String [] subject;
    String [] groupID;
    String [] subGroupID;
    String [] tags;
    
    int i = 0;
    int index_tag = 0;
    int index_sub = 0;
    int lec_count = 0;
    boolean lock = false;
    /**
     * Creates new form AddSession
     */
    public AddSession() {
        this.lectruerList = new  Hashtable<>();
        this.subjectList = new  Hashtable<>();
        this.groupIDList = new  Hashtable<>();
        this.subgroupIDList = new  Hashtable<>();
        this.lecList = new  Hashtable<>();
        this.tagList = new ArrayList<>();
        
        initComponents();
        
        try {
            connection = DBconnection.getConnection();
        } catch (SQLException | ClassNotFoundException | IOException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error on create Connection"+ex.getMessage(), "Data load error", JOptionPane.ERROR_MESSAGE);
        }
        
        lbl_ID.setVisible(false);
        cmb_ID.setVisible(false);
        
        lecList.put(0, cmb_lec1);
        lecList.put(1, cmb_lec2);
        lecList.put(2, cmb_lec3);
        lecList.put(3, cmb_lec4);
        lecList.put(4, cmb_lec5);
        lecList.put(5, cmb_lec6);
        lecList.put(6, cmb_lec7);
        lecList.put(7, cmb_lec8);
        lecList.put(8, cmb_lec9);
        lecList.put(9, cmb_lec10);
        
        cmb_lec2.setVisible(false);
        cmb_lec3.setVisible(false);
        cmb_lec4.setVisible(false);
        cmb_lec5.setVisible(false);
        cmb_lec6.setVisible(false);
        cmb_lec7.setVisible(false);
        cmb_lec8.setVisible(false);
        cmb_lec9.setVisible(false);
        cmb_lec10.setVisible(false);
        
        execute();
    }

    private void execute(){
        loadLecturers();
        loadSubjects();
        loadTags();
        loadGroupIDs();
        loadSubGroupIDs();
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_ID = new javax.swing.JLabel();
        txt_subc = new javax.swing.JTextField();
        txt_durat = new javax.swing.JTextField();
        txt_stu_coun = new javax.swing.JTextField();
        btn_reset = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        cmb_lec1 = new javax.swing.JComboBox<>();
        cmb_subj = new javax.swing.JComboBox<>();
        cmb_ID = new javax.swing.JComboBox<>();
        cmb_tag = new javax.swing.JComboBox<>();
        btn_addLec = new javax.swing.JButton();
        cmb_lec2 = new javax.swing.JComboBox<>();
        cmb_lec3 = new javax.swing.JComboBox<>();
        cmb_lec4 = new javax.swing.JComboBox<>();
        cmb_lec5 = new javax.swing.JComboBox<>();
        cmb_lec6 = new javax.swing.JComboBox<>();
        cmb_lec7 = new javax.swing.JComboBox<>();
        cmb_lec8 = new javax.swing.JComboBox<>();
        cmb_lec9 = new javax.swing.JComboBox<>();
        cmb_lec10 = new javax.swing.JComboBox<>();

        jPanel1.setBackground(java.awt.Color.gray);
        jPanel1.setToolTipText("");

        jPanel4.setBackground(new java.awt.Color(92, 141, 224));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Add Session");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addGap(337, 337, 337))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Lecturer(s)");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Subject");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Subject code");
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tag");
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Duration");
        jLabel5.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Student count");
        jLabel6.setPreferredSize(new java.awt.Dimension(100, 30));

        lbl_ID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_ID.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ID.setText("Group ID");
        lbl_ID.setPreferredSize(new java.awt.Dimension(100, 30));

        txt_subc.setEditable(false);
        txt_subc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_subc.setPreferredSize(new java.awt.Dimension(60, 30));

        txt_durat.setEditable(false);
        txt_durat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_durat.setPreferredSize(new java.awt.Dimension(60, 30));

        txt_stu_coun.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_stu_coun.setPreferredSize(new java.awt.Dimension(60, 30));

        btn_reset.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_reset.setText("Reset");
        btn_reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_resetMouseClicked(evt);
            }
        });

        btn_save.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_save.setText("Save");
        btn_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_saveMouseClicked(evt);
            }
        });

        cmb_lec1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec1.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_subj.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_subj.setPreferredSize(new java.awt.Dimension(150, 30));
        cmb_subj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_subjActionPerformed(evt);
            }
        });

        cmb_ID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_ID.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_tag.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_tag.setPreferredSize(new java.awt.Dimension(150, 30));
        cmb_tag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_tagActionPerformed(evt);
            }
        });

        btn_addLec.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_addLec.setText("Add lecturer");
        btn_addLec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_addLecMouseClicked(evt);
            }
        });

        cmb_lec2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec2.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_lec3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec3.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_lec4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec4.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_lec5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec5.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_lec6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec6.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_lec7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec7.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_lec8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec8.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_lec9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec9.setPreferredSize(new java.awt.Dimension(150, 30));

        cmb_lec10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmb_lec10.setPreferredSize(new java.awt.Dimension(150, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmb_lec6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_lec5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_lec4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_lec3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_lec2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_lec1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_lec7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_lec8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_lec9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_lec10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(btn_addLec))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(btn_reset)
                                .addGap(52, 52, 52)
                                .addComponent(btn_save))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(cmb_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_subj, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_tag, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_subc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_durat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_stu_coun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_reset, btn_save});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_addLec))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmb_lec1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_lec2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_lec3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_lec4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_lec5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_lec6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_lec7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_lec8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_lec9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_lec10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_subj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_subc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_tag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_durat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_stu_coun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save)
                    .addComponent(btn_reset))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 867, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_subjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_subjActionPerformed
        index_sub = cmb_subj.getSelectedIndex();
//       System.out.println(index_sub);
        if(index_sub != 0){
            getSubCode();
            getDuration();
        }
    }//GEN-LAST:event_cmb_subjActionPerformed

    private void cmb_tagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_tagActionPerformed
        index_tag = cmb_tag.getSelectedIndex();
//        System.out.println(index_tag);
        if(index_sub != 0){
            getDuration();
        }
    }//GEN-LAST:event_cmb_tagActionPerformed

    private void btn_resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_resetMouseClicked
        resetAll();
    }//GEN-LAST:event_btn_resetMouseClicked

    private void btn_addLecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_addLecMouseClicked
       if(lec_count < 9)
            ++lec_count;
       lecList.get(lec_count).setModel(new DefaultComboBoxModel<>(lecture));
       lecList.get(lec_count).setVisible(true);
    }//GEN-LAST:event_btn_addLecMouseClicked

    private void btn_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_saveMouseClicked
       lock = false;
        if(cmb_tag.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this, "Please select tag", "Data missing", JOptionPane.ERROR_MESSAGE);
            lock=true;
        }
        if(cmb_subj.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this, "Please select subject", "Data missing", JOptionPane.ERROR_MESSAGE);
            lock=true;
        }
        if(txt_stu_coun.getText().contentEquals("")){
            JOptionPane.showMessageDialog(this, "Please enter student count", "Data missing", JOptionPane.ERROR_MESSAGE);
            lock=true;
        }
        if(cmb_lec1.getSelectedIndex()==0){
                JOptionPane.showMessageDialog(this, "Please select lecturer", "Data missing", JOptionPane.ERROR_MESSAGE);
                lock=true;
        }
        if(lec_count > 0){
            
            for(int j = 1;j <= lec_count;j++){
                if(lecList.get(j).getSelectedIndex()==0){
                    JOptionPane.showMessageDialog(this, "Please select lecturer", "Data missing", JOptionPane.ERROR_MESSAGE);
                    lock=true;
                }
            }
        }
        if(cmb_tag.getSelectedIndex()>0){
            if(cmb_ID.getSelectedIndex()==0){
                JOptionPane.showMessageDialog(this, "Please select group ID", "Data missing", JOptionPane.ERROR_MESSAGE);
                lock=true;
            }
        }
        
        if(!lock){
           try {
               statement = connection.prepareStatement(CreateQuery.getQuery(Constant.INSERT_SESSION));
               
               statement.setString(1, cmb_subj.getSelectedItem().toString());
               statement.setString(2, txt_subc.getText());
               statement.setString(3, cmb_tag.getSelectedItem().toString());
               statement.setString(4, txt_durat.getText());
               
               if(cmb_tag.getSelectedItem().toString().contentEquals("Lecture") || cmb_tag.getSelectedItem().toString().contentEquals("Tutorial")){
                   
                    statement.setString(5, cmb_ID.getSelectedItem().toString());
                    statement.setString(6, null);
               }
               else{
                   statement.setString(5, null);
                   statement.setString(6, cmb_ID.getSelectedItem().toString());
               }
               statement.setString(7, txt_stu_coun.getText());
               
               statement.execute();
               statement.close();
               resultSet.close();
               
               statement = connection.prepareStatement(CreateQuery.getQuery(Constant.GET_SESSION_ID));
               statement1  = connection.prepareStatement(CreateQuery.getQuery(Constant.INSERT_SESSION_LECT));
               
               resultSet = statement.executeQuery();
               
               int ID = 0;
               
               while(resultSet.next()){
                   ID = resultSet.getInt("max");
               }
               statement.close();
               resultSet.close();
               
               for(int j =0; j <= lec_count;j++){
                    statement1.setInt(1,ID);
                    statement1.setInt(2,lectruerList.get(lecList.get(j).getSelectedIndex()).getId());
                    
                    statement1.execute();
               }
               
               
           } catch (ParserConfigurationException | SAXException | IOException | SQLException ex) {
               Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(this, "Error on data insert", "Data save error", JOptionPane.ERROR_MESSAGE);
               lock = true;
           }
           
           if(!lock){
               JOptionPane.showMessageDialog(this, "Session Inserted", "Data save ", JOptionPane.DEFAULT_OPTION);
               resetAll();
           }
        }
        
    }//GEN-LAST:event_btn_saveMouseClicked

    private void resetAll(){
        try{
            cmb_lec1.setSelectedIndex(0);
            cmb_subj.setSelectedIndex(0);
            if(cmb_tag.getSelectedIndex()> 0){

                cmb_ID.setSelectedIndex(0);
            }
            cmb_tag.setSelectedIndex(0);
            cmb_ID.setVisible(false);
            lbl_ID.setVisible(false);

            for(int j =1; j<= lec_count;j++){
                lecList.get(j).setSelectedIndex(0);
                lecList.get(j).setVisible(false);
            }
            txt_durat.setText("");
            txt_stu_coun.setText("");
            txt_subc.setText("");
            lec_count=0;
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Error on reset"+ex.getMessage(), "error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void getSubCode(){
        txt_subc.setText(subjectList.get(index_sub).getSub_code());
    }
    private void getDuration(){
        
        if((index_sub != 0)&& (index_tag != 0)){
            
            if(cmb_tag.getSelectedItem().toString().contentEquals("Lecture")){

                txt_durat.setText(subjectList.get(index_sub).getSub_lec_hr());
            }
            else if(cmb_tag.getSelectedItem().toString().contentEquals("Tutorial")){

                txt_durat.setText(subjectList.get(index_sub).getSub_tute_hr());
            }
            else if(cmb_tag.getSelectedItem().toString().contentEquals("Practical")){

                txt_durat.setText(subjectList.get(index_sub).getSub_lab_hr());
            }
            else if(cmb_tag.getSelectedItem().toString().contentEquals("Evaluation")){

                txt_durat.setText(subjectList.get(index_sub).getSub_eva_hr());
            }
        }
        
        if(index_tag != 0){
            
            if(cmb_tag.getSelectedItem().toString().contentEquals("Lecture")){

                lbl_ID.setText("Group ID");
                lbl_ID.setVisible(true);
                cmb_ID.setVisible(true);
                getGroupIDs();
            }
            else if(cmb_tag.getSelectedItem().toString().contentEquals("Tutorial")){

                lbl_ID.setText("Group ID");
                lbl_ID.setVisible(true);
                cmb_ID.setVisible(true);
                getGroupIDs();
            }
            else if(cmb_tag.getSelectedItem().toString().contentEquals("Practical")){

                lbl_ID.setText("Sub group ID");
                lbl_ID.setVisible(true);
                cmb_ID.setVisible(true);
                getSubGroupIDs();
            }
            else if(cmb_tag.getSelectedItem().toString().contentEquals("Evaluation")){

            }
        }
        
         if(index_tag == 0){
            lbl_ID.setVisible(false);
            cmb_ID.setVisible(false);
            
            txt_durat.setText("");
        }
        
    }
    
    private void getGroupIDs(){
        
        cmb_ID.setModel(new DefaultComboBoxModel<>(groupID));
    }
    
    private void getSubGroupIDs(){
        
        cmb_ID.setModel(new DefaultComboBoxModel<>(subGroupID));
    }
    
    private void loadLecturers(){
        i = 1;
        try {
            statement = connection.prepareStatement(CreateQuery.getQuery(Constant.GET_LECTURER));
            resultSet = statement.executeQuery();
            
            while(resultSet.next()){
                Lecturer l = new Lecturer();
                
                l.setId(resultSet.getInt("id"));
                l.setName(resultSet.getString("name"));
                
                lectruerList.put(i, l);
                
                i++;
            }
            
            if(lectruerList.size()>0){
                lecture = new String[lectruerList.size()+1];
                lecture[0] = "Select";
            }
            else{
                lecture = new String[1];
                lecture[0] = "No Items";
            }
            
            
            for(i =1;i <= lectruerList.size();i++){
                
                lecture[i] = lectruerList.get(i).getName();
            }
            cmb_lec1.setModel(new DefaultComboBoxModel<>(lecture));
            
            statement.close();
            resultSet.close();
        } catch (ParserConfigurationException | SAXException | IOException | SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(this, "Error on load lecturers data", "Data load error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void loadSubjects(){
        i = 1;
        try {
            statement = connection.prepareStatement(CreateQuery.getQuery(Constant.GET_SUBJECT));
            resultSet = statement.executeQuery();
            
            while(resultSet.next()){
                Subject s = new Subject();
                
                s.setId(resultSet.getInt("id"));
                s.setSub_name(resultSet.getString("subject_name"));
                s.setSub_code(resultSet.getString("subject_code"));
                s.setSub_lec_hr(resultSet.getString("lec_hr"));
                s.setSub_tute_hr(resultSet.getString("tute_hr"));
                s.setSub_lab_hr(resultSet.getString("lab_hr"));
                s.setSub_eva_hr(resultSet.getString("eva_hr"));
                s.setSub_year(resultSet.getString("offered_year"));
                s.setSub_sem(resultSet.getString("offered_semester"));
                
                subjectList.put(i, s);
                
                i++;
            }
            
            if(subjectList.size()>0){
                subject = new String[subjectList.size()+1];
                subject[0] = "Select";
            }
            else{
                subject = new String[1];
                subject[0] = "No Items";
            }
            
            for(i =1;i <= subjectList.size();i++){
                
                subject[i] = subjectList.get(i).getSub_name();
            }
            
            cmb_subj.setModel(new DefaultComboBoxModel<>(subject));
            
            statement.close();
            resultSet.close();
        } catch (ParserConfigurationException | SAXException | IOException | SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(this, "Error on load subjects data", "Data load error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void loadTags(){
        i = 1;
        try {
            statement = connection.prepareStatement(CreateQuery.getQuery(Constant.GET_TAG));
            resultSet = statement.executeQuery();
            
            while(resultSet.next()){
               tag t = new tag();
                
                t.setId(resultSet.getInt("id"));
                t.setTag(resultSet.getString("tag"));
                
                tagList.add(t);
            }
            
            if(tagList.size()>0){
                tags = new String[tagList.size()+1];
                tags[0] = "Select";
                
            }
            else{
                tags = new String[1];
                tags[0] = "No Items";
            }
            
            for(i =1;i <= tagList.size();i++){
                
                tags[i] = tagList.get(i-1).getTag();
            }
            
            cmb_tag.setModel(new DefaultComboBoxModel<>(tags));
            
            statement.close();
            resultSet.close();
        } catch (ParserConfigurationException | SAXException | IOException | SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(this, "Error on load tag data", "Data load error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void loadGroupIDs(){
        i = 1;
        try {
            statement = connection.prepareStatement(CreateQuery.getQuery(Constant.GET_GROUP_ID_TABLE));
            resultSet = statement.executeQuery();
            
            while(resultSet.next()){
                GeneratedId gID = new GeneratedId();
                
                gID.setId(resultSet.getInt("id"));
                gID.setgId(resultSet.getString("gId"));
                
                groupIDList.put(i, gID);
                
                i++;
            }
            
            if(groupIDList.size() > 0){
                
                groupID = new String[groupIDList.size()+1];
                groupID[0] = "Select";
            }
            else{
                groupID = new String[1];
                groupID[0] = "No Items";
            }
            
            for(i =1;i <= groupIDList.size();i++){
                
                groupID[i] = groupIDList.get(i).getGid();
            }
            
            
            statement.close();
            resultSet.close();
        } catch (ParserConfigurationException | SAXException | IOException | SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(this, "Error on load Group data", "Data load error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void loadSubGroupIDs(){
        i = 1;
        try {
            statement = connection.prepareStatement(CreateQuery.getQuery(Constant.GET_SUB_GROUP_ID_TABLE));
            resultSet = statement.executeQuery();
            
            while(resultSet.next()){
                GeneratedSubId sgID = new GeneratedSubId();
                
                sgID.setId(resultSet.getInt("id"));
                sgID.setsGid(resultSet.getString("sGid"));
                
                subgroupIDList.put(i, sgID);
                
                i++;
            }
            
            if(subgroupIDList.size()>0){
                
                subGroupID = new String[subgroupIDList.size()+1];
                subGroupID[0] = "Select";
            }
            else{
                subGroupID = new String[1];
                subGroupID[0] = "No Items";
            }
            
            for(i =1;i <= subgroupIDList.size();i++){
                
                subGroupID[i] = subgroupIDList.get(i).getsGid();
            }
            
            statement.close();
            resultSet.close();
        } catch (ParserConfigurationException | SAXException | IOException | SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(this, "Error on load Sub Group data", "Data load error", JOptionPane.ERROR_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addLec;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_save;
    private javax.swing.JComboBox<String> cmb_ID;
    private javax.swing.JComboBox<String> cmb_lec1;
    private javax.swing.JComboBox<String> cmb_lec10;
    private javax.swing.JComboBox<String> cmb_lec2;
    private javax.swing.JComboBox<String> cmb_lec3;
    private javax.swing.JComboBox<String> cmb_lec4;
    private javax.swing.JComboBox<String> cmb_lec5;
    private javax.swing.JComboBox<String> cmb_lec6;
    private javax.swing.JComboBox<String> cmb_lec7;
    private javax.swing.JComboBox<String> cmb_lec8;
    private javax.swing.JComboBox<String> cmb_lec9;
    private javax.swing.JComboBox<String> cmb_subj;
    private javax.swing.JComboBox<String> cmb_tag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_ID;
    private javax.swing.JTextField txt_durat;
    private javax.swing.JTextField txt_stu_coun;
    private javax.swing.JTextField txt_subc;
    // End of variables declaration//GEN-END:variables
}
